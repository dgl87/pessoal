DECLARE p_tenant_id STRING DEFAULT "57bf002600b4e11ab0e6074d"; 
DECLARE ingestDate DEFAULT DATE "2021-09-19"; 
CALL `journey-event-process-prod.portoseguro.sp_merge_journey_customer`(p_tenant_id, ingestDate);
CALL `journey-event-process-prod.portoseguro.sp_merge_journey_rate`(p_tenant_id, ingestDate);

CALL `journey-event-process-prod.portoseguro.sp_merge_journey_customer`('57bf002600b4e11ab0e6074d', '2021-10-03');
CALL `journey-event-process-prod.portoseguro.sp_merge_journey_rate`('57bf002600b4e11ab0e6074d', '2021-10-03');

CALL `journey-event-process-prod.portoseguro.sp_merge_journey_customer`(p_tenant_id, ingestDate);
CALL `journey-event-process-prod.portoseguro.sp_merge_journey_rate`(p_tenant_id, ingestDate);

LOOP DATAS
            DateTime StartDate = new DateTime(2020, 10, 03);
            DateTime EndDate = new DateTime(2021, 10, 03);

            foreach (DateTime day in EachDay(StartDate, EndDate))
            {
                Console.WriteLine(day.ToString("yyyy-MM-dd"));
            }

            ////metodo
            static IEnumerable<DateTime> EachDay(DateTime from, DateTime thru)
            {
                for (var day = from.Date; day.Date <= thru.Date; day = day.AddDays(1))
                    yield return day;
            }
			

using Google.Cloud.BigQuery.V2;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace DirectOne.App.Poc
{
    public class Program
    {
        static async Task Main(string[] args)
        {
            InfoTenants tenant;

            Console.Write("Digite o TenantId: ");
            string tenantId = Console.ReadLine();
            Console.Write("Digite a data de inÃ­cio: ");
            DateTime dateStart = DateTime.Parse(Console.ReadLine());

            tenant = new InfoTenants(tenantId, dateStart);

            string projetoId = "journey-event-process-prod";
            var cliente = BigQueryClient.Create(projetoId);

            //Loop de data
            string consultaSQL;
            BigQueryResults resultadoSQL;
            DateTime StartDate = new DateTime(2020, 10, 03);
            DateTime EndDate = new DateTime(2021, 10, 03);

            foreach (DateTime tenantDay in EachDay(StartDate, EndDate))
            {
                Console.WriteLine(tenantDay.ToString("yyyy-MM-dd"));
                consultaSQL = $"CALL `{projetoId}.portoseguro.sp_merge_journey_customer`('{tenantId}', '{tenantDay.ToString("yyyy-MM-dd")}');\n"
                            + $"CALL `{projetoId}.portoseguro.sp_merge_journey_rate`('{tenantId}', '{tenantDay.ToString("yyyy-MM-dd")}');";
                resultadoSQL = await cliente.ExecuteQueryAsync(consultaSQL, null);
            }

            //metodo
            static IEnumerable<DateTime> EachDay(DateTime from, DateTime thru)
            {
                for (var day = from.Date; day.Date <= thru.Date; day = day.AddDays(1))
                    yield return day;
            }
        }
    }
}
using System;

namespace DirectOne.App.Poc
{
    public class InfoTenants
    {
        public string TenantId { get; set; }
        public DateTime Date { get; set; }

        public InfoTenants(string tenantId, DateTime date)
        {
            TenantId = tenantId;
            Date = date;
        }        
    }
}
